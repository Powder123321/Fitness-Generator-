// <auto-generated />
using Chatgptgenerator.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Chatgptgenerator.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240902121604_UpdateUserInfoSchema")]
    partial class UpdateUserInfoSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("Chatgptgenerator.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Chatgptgenerator.AppUser", b =>
                {
                    b.OwnsOne("Chatgptgenerator.Models.UserInfo", "UserInfo", b1 =>
                        {
                            b1.Property<int>("AppUserId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Age")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Gender")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<double>("Height")
                                .HasColumnType("REAL");

                            b1.Property<string>("Token")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("UserName")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<double>("Weight")
                                .HasColumnType("REAL");

                            b1.Property<string>("WorkoutProgram")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("AppUserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("AppUserId");
                        });

                    b.Navigation("UserInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
